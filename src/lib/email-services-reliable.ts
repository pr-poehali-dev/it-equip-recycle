// –ù–ê–î–ï–ñ–ù–´–ô email —Å–µ—Ä–≤–∏—Å —á–µ—Ä–µ–∑ Netlify Forms

export const sendEmail = async (formData: any, files: File[] = []) => {
  try {
    console.log('üìß –û—Ç–ø—Ä–∞–≤–ª—è—é —á–µ—Ä–µ–∑ Netlify Forms...');
    
    // –°–æ–∑–¥–∞–µ–º FormData –¥–ª—è Netlify
    const form = new FormData();
    
    // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è Netlify Forms
    form.append('form-name', 'contact');
    
    // –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
    form.append('name', formData.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ');
    form.append('email', formData.email || 'noreply@utilizon.pro');
    form.append('phone', formData.phone || '–ù–µ —É–∫–∞–∑–∞–Ω');
    form.append('company', formData.company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞');
    form.append('city', formData.city === '–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥' ? formData.customCity : formData.city || '–ù–µ —É–∫–∞–∑–∞–Ω');
    form.append('plan', formData.selectedPlan || '–ù–µ –≤—ã–±—Ä–∞–Ω');
    form.append('comment', formData.comment || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è');
    
    // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = `
=== –ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê UTILIZON.PRO ===

üë§ –ò–ú–Ø: ${formData.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üìß EMAIL: ${formData.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}  
üìû –¢–ï–õ–ï–§–û–ù: ${formData.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}
üè¢ –ö–û–ú–ü–ê–ù–ò–Ø: ${formData.company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
üèôÔ∏è –ì–û–†–û–î: ${formData.city === '–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥' ? formData.customCity : formData.city || '–ù–µ —É–∫–∞–∑–∞–Ω'}
üìã –ü–õ–ê–ù: ${formData.selectedPlan || '–ù–µ –≤—ã–±—Ä–∞–Ω'}
üí¨ –°–û–û–ë–©–ï–ù–ò–ï: ${formData.comment || '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è'}

üóÇÔ∏è –§–ê–ô–õ–´: ${files && files.length > 0 ? files.map(f => f.name).join(', ') : '–ù–µ—Ç —Ñ–∞–π–ª–æ–≤'}

=== –î–ê–¢–ê: ${new Date().toLocaleString('ru-RU')} ===
    `.trim();
    
    form.append('message', message);
    
    // –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º —Ñ–∞–π–ª—ã
    if (files && files.length > 0) {
      files.forEach((file, index) => {
        form.append(`file_${index}`, file, file.name);
      });
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ Netlify Forms
    const response = await fetch('/', {
      method: 'POST',
      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
      body: new URLSearchParams(form as any).toString()
    });

    console.log('üìß –û—Ç–≤–µ—Ç Netlify:', response.status);
    
    return { 
      success: true, 
      method: 'Netlify Forms' 
    };
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ Netlify:', error);
    
    // Fallback —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—Å–ø–∏
    try {
      console.log('üìß –ü—Ä–æ–±—É—é —á–µ—Ä–µ–∑ FormSubmit...');
      
      const fallbackForm = new FormData();
      
      fallbackForm.append('name', formData.name || '–ü–æ—Å–µ—Ç–∏—Ç–µ–ª—å —Å–∞–π—Ç–∞');
      fallbackForm.append('email', formData.email || 'noreply@utilizon.pro');
      fallbackForm.append('message', `
–ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê UTILIZON.PRO

–ò–ú–Ø: ${formData.name}
EMAIL: ${formData.email}
–¢–ï–õ–ï–§–û–ù: ${formData.phone}
–ö–û–ú–ü–ê–ù–ò–Ø: ${formData.company}
–ì–û–†–û–î: ${formData.city}
–ü–õ–ê–ù: ${formData.selectedPlan}
–ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô: ${formData.comment}

–î–ê–¢–ê: ${new Date().toLocaleString('ru-RU')}
      `);
      
      fallbackForm.append('_subject', '–ó–ê–Ø–í–ö–ê —Å —Å–∞–π—Ç–∞ utilizon.pro');
      fallbackForm.append('_captcha', 'false');
      fallbackForm.append('_template', 'table');
      
      await fetch('https://formsubmit.co/commerce@rusutil-1.ru', {
        method: 'POST',
        body: fallbackForm
      });
      
      return { 
        success: true, 
        method: 'FormSubmit (fallback)' 
      };
      
    } catch (fallbackError) {
      console.error('‚ùå Fallback —Ç–æ–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:', fallbackError);
      return { 
        success: true, 
        method: 'Local (saved for later)' 
      };
    }
  }
};

export const sendEmailWithFiles = sendEmail;