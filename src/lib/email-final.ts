// –§–ò–ù–ê–õ–¨–ù–û–ï –†–ï–®–ï–ù–ò–ï - FormData —á–µ—Ä–µ–∑ XMLHttpRequest –ë–ï–ó –†–ï–î–ò–†–ï–ö–¢–ê

export const sendEmail = async (formData: any, files: File[] = []) => {
  const form = new FormData();
  
  // –í–∞—à —Ä–µ–∞–ª—å–Ω—ã–π –∫–ª—é—á
  form.append('access_key', '364693fd-da09-4ed2-a039-ae99a5d01f42');
  
  // –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –¥–ª—è Web3Forms)
  form.append('name', formData.name || '–ü–æ—Å–µ—Ç–∏—Ç–µ–ª—å —Å–∞–π—Ç–∞');
  form.append('email', formData.email || 'noreply@example.com');
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
  form.append('phone', formData.phone || '–ù–µ —É–∫–∞–∑–∞–Ω');
  form.append('company', formData.company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞');
  form.append('city', formData.city === '–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥' ? formData.customCity : formData.city || '–ù–µ —É–∫–∞–∑–∞–Ω');
  form.append('plan', formData.selectedPlan || '–ù–µ –≤—ã–±—Ä–∞–Ω');
  
  const message = `
–ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê UTILIZON.PRO

–ò–ú–Ø: ${formData.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
EMAIL: ${formData.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}
–¢–ï–õ–ï–§–û–ù: ${formData.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}
–ö–û–ú–ü–ê–ù–ò–Ø: ${formData.company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
–ì–û–†–û–î: ${formData.city === '–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥' ? formData.customCity : formData.city || '–ù–µ —É–∫–∞–∑–∞–Ω'}
–ü–õ–ê–ù: ${formData.selectedPlan || '–ù–µ –≤—ã–±—Ä–∞–Ω'}
–ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô: ${formData.comment || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'}

–§–ê–ô–õ–´: ${files && files.length > 0 ? files.map(f => f.name).join(', ') : '–ù–µ—Ç —Ñ–∞–π–ª–æ–≤'}
–ö–û–õ–ò–ß–ï–°–¢–í–û –§–ê–ô–õ–û–í: ${files ? files.length : 0} –∏–∑ 5

–î–ê–¢–ê: ${new Date().toLocaleString('ru-RU')}
–ò–°–¢–û–ß–ù–ò–ö: utilizon.pro
  `;
  
  form.append('message', message);
  form.append('subject', '–ó–ê–Ø–í–ö–ê —Å —Å–∞–π—Ç–∞ utilizon.pro');
  form.append('botcheck', '');
  
  // –î–û 5 –§–ê–ô–õ–û–í
  if (files && files.length > 0) {
    files.slice(0, 5).forEach((file, index) => {
      form.append(`attachment`, file, file.name);
    });
  }

  // XMLHttpRequest –ë–ï–ó –†–ï–î–ò–†–ï–ö–¢–ê
  return new Promise((resolve) => {
    console.log('üöÄ –ó–ê–ü–£–°–ö XMLHttpRequest –∫ Web3Forms...');
    console.log('üìã Access Key:', '364693fd-da09-4ed2-a039-ae99a5d01f42');
    console.log('üì® –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:');
    console.log('  –ò–º—è:', formData.name);
    console.log('  Email:', formData.email);
    console.log('  –¢–µ–ª–µ—Ñ–æ–Ω:', formData.phone);
    console.log('  –ö–æ–º–ø–∞–Ω–∏—è:', formData.company);
    console.log('  –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:', formData.comment);
    
    const xhr = new XMLHttpRequest();
    
    xhr.onload = () => {
      console.log('üì° –û–¢–í–ï–¢ –ü–û–õ–£–ß–ï–ù!');
      console.log('‚úÖ –°—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–∫–∏:', xhr.status);
      console.log('üìß –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', xhr.responseText);
      console.log('üìä Ready State:', xhr.readyState);
      
      if (xhr.status >= 200 && xhr.status < 300) {
        try {
          const response = JSON.parse(xhr.responseText);
          console.log('üì¶ –ü–∞—Ä—Å–∏–º JSON –æ—Ç–≤–µ—Ç:', response);
          if (response.success) {
            console.log('üéâ Web3Forms –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –æ—Ç–ø—Ä–∞–≤–∫—É!');
            console.log('‚úÖ SUCCESS = TRUE –≤ –æ—Ç–≤–µ—Ç–µ');
            resolve({ success: true, method: 'Web3Forms —Å —Ñ–∞–π–ª–∞–º–∏' });
          } else {
            console.log('‚ùå Web3Forms –æ—à–∏–±–∫–∞:', response.message);
            console.log('‚ùå SUCCESS = FALSE –≤ –æ—Ç–≤–µ—Ç–µ');
            resolve({ success: false, error: response.message });
          }
        } catch (parseError) {
          console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:', parseError);
          console.log('‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω, —Å—á–∏—Ç–∞–µ–º —É—Å–ø–µ—à–Ω—ã–º');
          resolve({ success: true, method: 'Web3Forms —Å —Ñ–∞–π–ª–∞–º–∏' });
        }
      } else {
        console.log('‚ùå HTTP –æ—à–∏–±–∫–∞:', xhr.status);
        console.log('‚ùå –°—Ç–∞—Ç—É—Å –ù–ï 2xx');
        resolve({ success: false, error: `HTTP ${xhr.status}` });
      }
    };
    
    xhr.onerror = (error) => {
      console.log('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –°–ï–¢–ò!');
      console.log('‚ùå –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error);
      console.log('‚ùå –ù–ï –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –∫ —Å–µ—Ä–≤–µ—Ä—É Web3Forms');
      resolve({ success: false, error: '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏' });
    };
    
    xhr.ontimeout = () => {
      console.log('‚è∞ –¢–ê–ô–ú–ê–£–¢ –∑–∞–ø—Ä–æ—Å–∞!');
      resolve({ success: false, error: '–¢–∞–π–º–∞—É—Ç' });
    };
    
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é POST –∑–∞–ø—Ä–æ—Å...');
    xhr.open('POST', 'https://api.web3forms.com/submit');
    // –ù–ï –£–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–ú Content-Type - –±—Ä–∞—É–∑–µ—Ä —Å–∞–º –ø–æ—Å—Ç–∞–≤–∏—Ç –¥–ª—è FormData
    xhr.timeout = 30000; // 30 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
    xhr.send(form);
    console.log('üöÄ XMLHttpRequest –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!');
  });
};

export const sendEmailWithFiles = sendEmail;