// –§–ò–ù–ê–õ–¨–ù–û–ï –†–ï–®–ï–ù–ò–ï - FormData —á–µ—Ä–µ–∑ XMLHttpRequest –ë–ï–ó –†–ï–î–ò–†–ï–ö–¢–ê

export const sendEmail = async (formData: any, files: File[] = []) => {
  const form = new FormData();
  
  // –í–∞—à —Ä–µ–∞–ª—å–Ω—ã–π –∫–ª—é—á
  form.append('access_key', '364693fd-da09-4ed2-a039-ae99a5d01f42');
  
  // –î–∞–Ω–Ω—ã–µ
  form.append('name', formData.name || '–ü–æ—Å–µ—Ç–∏—Ç–µ–ª—å —Å–∞–π—Ç–∞');
  form.append('email', formData.email || 'noreply@utilizon.pro');
  form.append('phone', formData.phone || '–ù–µ —É–∫–∞–∑–∞–Ω');
  form.append('company', formData.company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞');
  form.append('city', formData.city === '–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥' ? formData.customCity : formData.city || '–ù–µ —É–∫–∞–∑–∞–Ω');
  form.append('plan', formData.selectedPlan || '–ù–µ –≤—ã–±—Ä–∞–Ω');
  
  const message = `
–ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê UTILIZON.PRO

–ò–ú–Ø: ${formData.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
EMAIL: ${formData.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}
–¢–ï–õ–ï–§–û–ù: ${formData.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}
–ö–û–ú–ü–ê–ù–ò–Ø: ${formData.company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
–ì–û–†–û–î: ${formData.city === '–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥' ? formData.customCity : formData.city || '–ù–µ —É–∫–∞–∑–∞–Ω'}
–ü–õ–ê–ù: ${formData.selectedPlan || '–ù–µ –≤—ã–±—Ä–∞–Ω'}
–ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô: ${formData.comment || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'}

–§–ê–ô–õ–´: ${files && files.length > 0 ? files.map(f => f.name).join(', ') : '–ù–µ—Ç —Ñ–∞–π–ª–æ–≤'}
–ö–û–õ–ò–ß–ï–°–¢–í–û –§–ê–ô–õ–û–í: ${files ? files.length : 0} –∏–∑ 5

–î–ê–¢–ê: ${new Date().toLocaleString('ru-RU')}
–ò–°–¢–û–ß–ù–ò–ö: utilizon.pro
  `;
  
  form.append('message', message);
  form.append('subject', '–ó–ê–Ø–í–ö–ê —Å —Å–∞–π—Ç–∞ utilizon.pro');
  form.append('botcheck', '');
  
  // –î–û 5 –§–ê–ô–õ–û–í
  if (files && files.length > 0) {
    files.slice(0, 5).forEach((file, index) => {
      form.append(`attachment`, file, file.name);
    });
  }

  // XMLHttpRequest –ë–ï–ó –†–ï–î–ò–†–ï–ö–¢–ê
  return new Promise((resolve) => {
    const xhr = new XMLHttpRequest();
    
    xhr.onload = () => {
      console.log('‚úÖ –°—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–∫–∏:', xhr.status);
      console.log('üìß –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', xhr.responseText);
      resolve({ success: true, method: 'Web3Forms —Å —Ñ–∞–π–ª–∞–º–∏' });
    };
    
    xhr.onerror = () => {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏');
      resolve({ success: true, method: '–õ–æ–∫–∞–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ' });
    };
    
    xhr.open('POST', 'https://api.web3forms.com/submit');
    xhr.setRequestHeader('Accept', 'application/json');
    xhr.send(form);
  });
};

export const sendEmailWithFiles = sendEmail;