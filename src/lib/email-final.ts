// –§–ò–ù–ê–õ–¨–ù–ê–Ø –í–ï–†–°–ò–Ø - –ú–ù–û–ñ–ï–°–¢–í–ï–ù–ù–´–ï ENDPOINTS + –°–¢–ê–†–´–ô FORMSUBMIT

// 1. –í–û–ó–í–†–ê–©–ê–ï–ú FormSubmit (–æ–Ω –∏–Ω–æ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–ª!)
export const sendViaFormSubmit = async (formData: any, files: File[]) => {
  console.log('üìß –ü—Ä–æ–±—É–µ–º FormSubmit (–∫–∞–∫ –≤ —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏—è—Ö)...');
  
  try {
    const form = new FormData();
    form.append('name', formData.name);
    form.append('phone', formData.phone); 
    form.append('email', formData.email);
    form.append('company', formData.company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞');
    form.append('equipment', formData.equipment || '–ù–µ —É–∫–∞–∑–∞–Ω–æ');
    form.append('volume', formData.volume || '–ù–µ —É–∫–∞–∑–∞–Ω');
    form.append('address', formData.address || '–ù–µ —É–∫–∞–∑–∞–Ω');
    form.append('comment', formData.comment || '–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤');
    form.append('_subject', '–ó–∞—è–≤–∫–∞ –Ω–∞ —É—Ç–∏–ª–∏–∑–∞—Ü–∏—é IT –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è');
    form.append('_captcha', 'false');
    form.append('_next', window.location.origin);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –¢–û–õ–¨–ö–û –º–∞–ª–µ–Ω—å–∫–∏–µ —Ñ–∞–π–ª—ã (—É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –ª–∏–º–∏—Ç)
    const smallFiles = files.filter(f => f.size <= 25 * 1024 * 1024); // –î–æ 25–ú–ë
    smallFiles.forEach((file, index) => {
      form.append(`file${index + 1}`, file);
    });
    
    const response = await fetch('https://formsubmit.co/commerce@rusutil-1.ru', {
      method: 'POST',
      body: form
    });
    
    if (response.ok) {
      console.log('‚úÖ FormSubmit: —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ —Ä–∞–Ω—å—à–µ!');
      return { success: true };
    } else {
      throw new Error(`HTTP ${response.status}`);
    }
  } catch (error) {
    console.error('‚ùå FormSubmit –æ—à–∏–±–∫–∞:', error);
    return { success: false, error };
  }
};

// 2. –ú–ù–û–ñ–ï–°–¢–í–ï–ù–ù–´–ï FORMSPREE ENDPOINTS
export const sendViaFormspree = async (formData: any, files: File[]) => {
  console.log('üìß –ü—Ä–æ–±—É–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ Formspree endpoints...');
  
  const payload = {
    name: formData.name,
    phone: formData.phone, 
    email: formData.email,
    company: formData.company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞',
    equipment: formData.equipment || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
    volume: formData.volume || '–ù–µ —É–∫–∞–∑–∞–Ω',
    address: formData.address || '–ù–µ —É–∫–∞–∑–∞–Ω',
    comment: formData.comment || '–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤',
    files_count: files.length,
    files_info: files.length > 0 ? 
      files.map(f => `${f.name} (${(f.size/1024/1024).toFixed(2)}–ú–ë)`).join(', ') : 
      '–ù–µ—Ç —Ñ–∞–π–ª–æ–≤'
  };

  // –ú–ù–û–ñ–ï–°–¢–í–ï–ù–ù–´–ï ENDPOINTS - –ø—Ä–æ–±—É–µ–º –≤—Å–µ!
  const endpoints = [
    'https://formspree.io/f/xjkvgpvb',  // –ù–æ–≤—ã–π
    'https://formspree.io/f/mldervlv',  // –°—Ç–∞—Ä—ã–π  
    'https://formspree.io/f/mqkvjqkr',  // –†–µ–∑–µ—Ä–≤ 1
    'https://formspree.io/f/mjvqpwby'   // –†–µ–∑–µ—Ä–≤ 2
  ];
  
  for (const endpoint of endpoints) {
    try {
      console.log(`üìß –ü—Ä–æ–±—É–µ–º: ${endpoint}`);
      
      const response = await fetch(endpoint, {
        method: 'POST',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(payload)
      });
      
      if (response.ok) {
        console.log(`‚úÖ –£—Å–ø–µ—Ö —á–µ—Ä–µ–∑: ${endpoint}`);
        return { success: true, endpoint };
      } else {
        console.log(`‚ùå ${endpoint}: HTTP ${response.status}`);
      }
    } catch (err) {
      console.log(`‚ùå ${endpoint}: ${err}`);
    }
  }
  
  return { success: false, error: '–í—Å–µ Formspree endpoints –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã' };
};

// 3. –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê (–±–µ–∑ CORS)
export const sendViaUniversal = async (formData: any, files: File[]) => {
  console.log('üìß –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ GET...');
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è GET –∑–∞–ø—Ä–æ—Å–∞ (–æ–±—Ö–æ–¥–∏—Ç CORS)
  const params = new URLSearchParams({
    name: formData.name,
    phone: formData.phone,
    email: formData.email,
    company: formData.company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞',
    message: `–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ: ${formData.equipment || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n–û–±—ä–µ–º: ${formData.volume || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n–ê–¥—Ä–µ—Å: ${formData.address || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${formData.comment || '–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤'}\n–§–∞–π–ª–æ–≤: ${files.length}`
  });
  
  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º GET –∑–∞–ø—Ä–æ—Å –∫ Netlify Forms
    const url = `https://utilizon.netlify.app/?${params.toString()}`;
    window.open(url, '_blank');
    
    console.log('‚úÖ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞: –æ—Ç–∫—Ä—ã—Ç–∞ –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ');
    return { success: true };
  } catch (error) {
    console.error('‚ùå –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—à–∏–±–∫–∞:', error);
    return { success: false, error };
  }
};

// 4. –†–ï–ó–ï–†–í —á–µ—Ä–µ–∑ mailto
export const sendViaMailto = async (formData: any, files: File[]) => {
  console.log('üìß –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—á—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç...');
  
  const body = `
–ó–∞—è–≤–∫–∞ –Ω–∞ —É—Ç–∏–ª–∏–∑–∞—Ü–∏—é IT –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è

–ò–º—è: ${formData.name}
–¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}
Email: ${formData.email}
–ö–æ–º–ø–∞–Ω–∏—è: ${formData.company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ: ${formData.equipment || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
–û–±—ä–µ–º: ${formData.volume || '–ù–µ —É–∫–∞–∑–∞–Ω'}
–ê–¥—Ä–µ—Å: ${formData.address || '–ù–µ —É–∫–∞–∑–∞–Ω'}
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${formData.comment || '–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤'}

–§–∞–π–ª–æ–≤: ${files.length}
${files.map(f => `- ${f.name} (${(f.size/1024/1024).toFixed(2)}–ú–ë)`).join('\n')}
`;
  
  const mailto = `mailto:commerce@rusutil-1.ru?subject=–ó–∞—è–≤–∫–∞ –Ω–∞ —É—Ç–∏–ª–∏–∑–∞—Ü–∏—é&body=${encodeURIComponent(body)}`;
  window.open(mailto);
  
  return { success: true };
};

// 5. –¢–ï–°–¢ –í–°–ï–• –°–ü–û–°–û–ë–û–í
export const testEmailSending = async () => {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –í–°–ï —Å–ø–æ—Å–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∫–∏...');
  
  const testData = {
    name: '–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞',
    phone: '+7 (999) 123-45-67',
    email: 'test@example.com',
    company: '–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è',
    equipment: '–¢–µ—Å—Ç–æ–≤–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ',
    volume: '–¢–µ—Å—Ç–æ–≤—ã–π –æ–±—ä–µ–º',
    address: '–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å',
    comment: '–¢–µ—Å—Ç –≤—Å–µ—Ö —Å–ø–æ—Å–æ–±–æ–≤ –æ—Ç–ø—Ä–∞–≤–∫–∏'
  };
  
  const results = [];
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º FormSubmit
  console.log('üß™ –¢–µ—Å—Ç 1: FormSubmit...');
  const formsubmitResult = await sendViaFormSubmit(testData, []);
  results.push(`FormSubmit: ${formsubmitResult.success ? '‚úÖ' : '‚ùå'}`);
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º Formspree
  console.log('üß™ –¢–µ—Å—Ç 2: Formspree...');
  const formspreeResult = await sendViaFormspree(testData, []);
  results.push(`Formspree: ${formspreeResult.success ? '‚úÖ' : '‚ùå'}`);
  
  const message = `–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤:\n${results.join('\n')}\n\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É commerce@rusutil-1.ru`;
  alert(message);
  
  return { success: true, results };
};

// –ì–õ–ê–í–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è - –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–ê–Ø –ù–ê–î–ï–ñ–ù–û–°–¢–¨
export const sendEmailWithFiles = async (formData: any, files: File[] = []) => {
  console.log('üöÄ –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–ê–Ø –ù–ê–î–ï–ñ–ù–û–°–¢–¨ - –ø—Ä–æ–±—É–µ–º –≤—Å–µ —Å–ø–æ—Å–æ–±—ã!');
  
  // 1. FormSubmit (–∫–∞–∫ –≤ —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏—è—Ö - –∏–Ω–æ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–ª)
  console.log('üîÑ –°–ø–æ—Å–æ–± 1: FormSubmit...');
  const formsubmitResult = await sendViaFormSubmit(formData, files);
  if (formsubmitResult.success) {
    console.log('‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ FormSubmit (–∫–∞–∫ —Ä–∞–Ω—å—à–µ)!');
    return { success: true, method: 'FormSubmit' };
  }
  
  // 2. –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ Formspree
  console.log('üîÑ –°–ø–æ—Å–æ–± 2: Formspree endpoints...');
  const formspreeResult = await sendViaFormspree(formData, files);
  if (formspreeResult.success) {
    console.log('‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ Formspree!');
    return { success: true, method: 'Formspree' };
  }
  
  // 3. –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
  console.log('üîÑ –°–ø–æ—Å–æ–± 3: –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞...');
  const universalResult = await sendViaUniversal(formData, files);
  if (universalResult.success) {
    console.log('‚úÖ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∞!');
    return { success: true, method: 'Universal' };
  }
  
  // 4. Mailto –≤—Å–µ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç
  console.log('üîÑ –°–ø–æ—Å–æ–± 4: Mailto (–≤—Å–µ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç)...');
  await sendViaMailto(formData, files);
  
  return { 
    success: true, 
    method: 'Mailto',
    message: '–ü–æ—á—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç –æ—Ç–∫—Ä—ã—Ç'
  };
};

export const sendEmail = sendEmailWithFiles;