// –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–ê–Ø –æ—Ç–ø—Ä–∞–≤–∫–∞ email —Å —Ñ–∞–π–ª–∞–º–∏ - —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –í–°–ï–• –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

// FormSubmit - –°–ê–ú–´–ô –ù–ê–î–ï–ñ–ù–´–ô —Å–ø–æ—Å–æ–± —Å —Ñ–∞–π–ª–∞–º–∏ (–¥–æ 5 —Ñ–∞–π–ª–æ–≤ –ø–æ 5–ú–ë)
export const sendViaFormSubmit = async (formData: any, files: File[]) => {
  try {
    console.log('üì§ FormSubmit: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å —Ñ–∞–π–ª–∞–º–∏...');
    
    const form = new FormData();
    
    // –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    form.append('name', formData.name);
    form.append('email', formData.email);
    form.append('phone', formData.phone);
    form.append('company', formData.company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞');
    form.append('city', formData.city === '–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥' ? formData.customCity : formData.city || '–ù–µ —É–∫–∞–∑–∞–Ω');
    form.append('plan', formData.selectedPlan || '–ù–µ –≤—ã–±—Ä–∞–Ω');
    form.append('message', formData.comment || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤');
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ FormSubmit
    form.append('_subject', '–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —É—Ç–∏–ª–∏–∑–∞—Ü–∏—é IT –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è');
    form.append('_captcha', 'false');
    form.append('_template', 'table');
    form.append('_next', window.location.origin + '?success=true');
    
    // –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º —Ñ–∞–π–ª—ã (–¥–æ 5 —à—Ç—É–∫)
    const filesToSend = files.slice(0, 5);
    filesToSend.forEach((file, index) => {
      form.append(`file_${index + 1}`, file);
    });
    
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–∞—Ö –≤ —Ç–µ–∫—Å—Ç–µ –ø–∏—Å—å–º–∞
    if (filesToSend.length > 0) {
      const filesInfo = filesToSend.map((f, i) => 
        `${i + 1}. ${f.name} (${(f.size/1024/1024).toFixed(2)}–ú–ë)`
      ).join('\n');
      form.append('files_info', `–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${filesToSend.length}\n${filesInfo}`);
    }

    const response = await fetch('https://formsubmit.co/commerce@rusutil-1.ru', {
      method: 'POST',
      body: form
    });

    console.log('‚úÖ FormSubmit: –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!', response.status);
    return { success: response.ok, method: 'FormSubmit' };
    
  } catch (error) {
    console.error('‚ùå FormSubmit error:', error);
    return { success: false, error, method: 'FormSubmit' };
  }
};



// FormSpree - —Ä–µ–∑–µ—Ä–≤–Ω—ã–π —Å–ø–æ—Å–æ–± (–ë–ï–ó —Ñ–∞–π–ª–æ–≤, —Ç–æ–ª—å–∫–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)
export const sendViaFormSpree = async (formData: any, files: File[]) => {
  try {
    const response = await fetch('https://formspree.io/f/xvggqgok', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        name: formData.name,
        email: formData.email,
        phone: formData.phone,
        company: formData.company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞',
        city: formData.city === '–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥' ? formData.customCity : formData.city,
        plan: formData.selectedPlan || '–ù–µ –≤—ã–±—Ä–∞–Ω',
        message: formData.comment || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤',
        files_info: files.length > 0 ? `–ö–ª–∏–µ–Ω—Ç –ø—ã—Ç–∞–ª—Å—è –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å ${files.length} —Ñ–∞–π–ª(–æ–≤): ${files.map(f => f.name).join(', ')}. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∫–ª–∏–µ–Ω—Ç–æ–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤.` : '–ë–µ–∑ —Ñ–∞–π–ª–æ–≤'
      })
    });

    return { success: response.ok, method: 'FormSpree' };
  } catch (error) {
    return { success: false, error, method: 'FormSpree' };
  }
};

// –ì–õ–ê–í–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è - FormSubmit –ü–ï–†–í–´–ú (—Å —Ñ–∞–π–ª–∞–º–∏), –ø–æ—Ç–æ–º —Ä–µ–∑–µ—Ä–≤
export const sendEmail = async (formData: any, files: File[] = []) => {
  console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞—è–≤–∫—É —Å —Ñ–∞–π–ª–∞–º–∏...');
  
  // –°–ü–û–°–û–ë 1: FormSubmit —Å —Ñ–∞–π–ª–∞–º–∏ (–û–°–ù–û–í–ù–û–ô)
  const formSubmitResult = await sendViaFormSubmit(formData, files);
  if (formSubmitResult.success) {
    console.log('‚úÖ FormSubmit - SUCCESS —Å —Ñ–∞–π–ª–∞–º–∏!');
    return { success: true, method: 'FormSubmit' };
  }
  
  console.log('‚ö†Ô∏è FormSubmit –Ω–µ —É–¥–∞–ª—Å—è, –ø—Ä–æ–±—É–µ–º FormSpree...');
  
  // –°–ü–û–°–û–ë 2: FormSpree –±–µ–∑ —Ñ–∞–π–ª–æ–≤ (–†–ï–ó–ï–†–í)
  const formSpreeResult = await sendViaFormSpree(formData, files);
  if (formSpreeResult.success) {
    console.log('‚úÖ FormSpree - SUCCESS (–±–µ–∑ —Ñ–∞–π–ª–æ–≤)');
    return { success: true, method: 'FormSpree' };
  }
  
  console.log('‚ùå –í—Å–µ —Å–ø–æ—Å–æ–±—ã –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏');
  return { success: false, error: '–°–µ—Ä–≤–∏—Å—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã' };
};

// –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
export const sendEmailWithFiles = sendEmail;