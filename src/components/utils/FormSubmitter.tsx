import { AppFormData } from '@/types/form';
import { areFilesSmall } from './FileHandler';
import {
  createLoadingIndicator,
  createSuccessModal,
  createFileSuccessModal,
  createErrorModal,
  createFileSizeErrorModal,
  sendSmallFiles,
  sendSmallFilesSingle,
  sendSmallFilesMultiple,
  sendLargeFiles,
  sendFormWithoutFiles,
  sendFallbackForm
} from './FormLogic';

interface FormSubmitterProps {
  formData: AppFormData;
  agreed: boolean;
  onSuccess: () => void;
}

export const useFormSubmitter = ({ formData, agreed, onSuccess }: FormSubmitterProps) => {
  const handleSubmit = async (e?: React.MouseEvent) => {
    e?.preventDefault();
    console.log('üöÄ –ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞!', { formData, agreed });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    if (!formData.name.trim() || !formData.phone.trim() || !formData.email.trim()) {
      alert('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: –ò–º—è, –¢–µ–ª–µ—Ñ–æ–Ω, Email');
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≥–ª–∞—Å–∏–µ
    if (!agreed) {
      alert('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏');
      return;
    }
    
    console.log('‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –æ—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞—è–≤–∫—É...');
    
    const cityInfo = formData.city === '–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥' ? formData.customCity : formData.city;
    
    // –ü–†–û–°–¢–û–ï –†–ï–®–ï–ù–ò–ï: –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º HTML-—Ñ–æ—Ä–º—É
    console.log('üìù –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ HTML-—Ñ–æ—Ä–º—É (100% –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç—å)...');
    
    // –°–æ–∑–¥–∞—ë–º HTML —Ñ–æ—Ä–º—É
    const htmlForm = document.createElement('form');
    htmlForm.method = 'POST';
    htmlForm.action = 'https://formsubmit.co/commerce@rusutil-1.ru';
    htmlForm.enctype = 'multipart/form-data';
    htmlForm.style.display = 'none';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –ø–æ–ª—è
    const fields = [
      { name: 'name', value: formData.name },
      { name: 'email', value: formData.email },
      { name: 'phone', value: formData.phone },
      { name: 'company', value: formData.company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞' },
      { name: 'city', value: cityInfo || '–ù–µ —É–∫–∞–∑–∞–Ω' },
      { name: 'plan', value: formData.selectedPlan || '–ù–µ –≤—ã–±—Ä–∞–Ω' },
      { name: 'message', value: formData.comment || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤' },
      { name: '_subject', value: '–ó–∞—è–≤–∫–∞ –Ω–∞ —É—Ç–∏–ª–∏–∑–∞—Ü–∏—é IT –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è —Å —Å–∞–π—Ç–∞ utilizon.pro' },
      { name: '_captcha', value: 'false' },
      { name: '_template', value: 'table' },
      { name: '_next', value: 'https://utilizon.pro/success' },
      { name: '_error', value: 'https://utilizon.pro/error' }
    ];
    
    fields.forEach(field => {
      const input = document.createElement('input');
      input.type = 'hidden';
      input.name = field.name;
      input.value = field.value;
      htmlForm.appendChild(input);
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –µ—Å–ª–∏ –µ—Å—Ç—å
    if (formData.files && formData.files.length > 0) {
      formData.files.forEach((file, index) => {
        const fileInput = document.createElement('input');
        fileInput.type = 'file';
        fileInput.name = index === 0 ? 'attachment' : `attachment${index + 1}`;
        fileInput.style.display = 'none';
        
        const dataTransfer = new DataTransfer();
        dataTransfer.items.add(file);
        fileInput.files = dataTransfer.files;
        
        htmlForm.appendChild(fileInput);
        console.log(`üìé –î–æ–±–∞–≤–ª–µ–Ω —Ñ–∞–π–ª: ${file.name}`);
      });
    }
    
    document.body.appendChild(htmlForm);
    
    console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º HTML-—Ñ–æ—Ä–º—É...');
    htmlForm.submit();
    
    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
    onSuccess();
  };

  return { handleSubmit };
};