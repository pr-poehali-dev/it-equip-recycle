import { AppFormData } from '@/types/form';

// –û—Ç–ø—Ä–∞–≤–∫–∞ –º–∞–ª—ã—Ö —Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö Ajax –∑–∞–ø—Ä–æ—Å–æ–≤
export async function sendSmallFilesMultiple(formData: AppFormData, cityInfo: string): Promise<void> {
  console.log('üìß –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª –æ—Ç–¥–µ–ª—å–Ω—ã–º –ø–∏—Å—å–º–æ–º –¥–ª—è –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç–∏');
  
  for (let i = 0; i < formData.files.length; i++) {
    const file = formData.files[i];
    console.log(`üìé –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª ${i + 1}/${formData.files.length}: ${file.name}`);
    
    const singleFileFormData = new FormData();
    singleFileFormData.append('name', formData.name);
    singleFileFormData.append('email', formData.email);
    singleFileFormData.append('phone', formData.phone);
    singleFileFormData.append('company', formData.company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞');
    singleFileFormData.append('city', cityInfo || '–ù–µ —É–∫–∞–∑–∞–Ω');
    singleFileFormData.append('plan', formData.selectedPlan || '–ù–µ –≤—ã–±—Ä–∞–Ω');
    singleFileFormData.append('message', formData.comment || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤');
    singleFileFormData.append('_subject', `–ó–∞—è–≤–∫–∞ –Ω–∞ —É—Ç–∏–ª–∏–∑–∞—Ü–∏—é IT –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è - —Ñ–∞–π–ª ${i + 1} –∏–∑ ${formData.files.length}: ${file.name}`);
    singleFileFormData.append('_captcha', 'false');
    singleFileFormData.append('_template', 'table');
    singleFileFormData.append('_next', 'https://utilizon.pro/success');
    singleFileFormData.append('_error', 'https://utilizon.pro/error');
    singleFileFormData.append('attachment', file);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–π–º-–∞—É—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞
    const controller = new AbortController();
    const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 —Å–µ–∫—É–Ω–¥ –Ω–∞ —Ñ–∞–π–ª
    
    let response;
    try {
      response = await fetch('https://formsubmit.co/ajax/commerce@rusutil-1.ru', {
        method: 'POST',
        body: singleFileFormData,
        headers: {
          'Accept': 'application/json'
        },
        signal: controller.signal
      });
      clearTimeout(timeoutId);
    } catch (fetchError) {
      clearTimeout(timeoutId);
      if (fetchError.name === 'AbortError') {
        throw new Error(`–¢–∞–π–º-–∞—É—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ ${file.name} (10 —Å–µ–∫—É–Ω–¥)`);
      }
      throw fetchError;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç –±–æ–ª–µ–µ —Ç—â–∞—Ç–µ–ª—å–Ω–æ
    let success = false;
    
    try {
      if (response.ok) {
        const responseData = await response.json();
        console.log(`üìß FormSubmit –æ—Ç–≤–µ—Ç –¥–ª—è ${file.name}:`, responseData);
        success = responseData.success !== false;
      }
    } catch (jsonError) {
      // –ï—Å–ª–∏ –Ω–µ JSON, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ —Å—Ç–∞—Ç—É—Å—É
      success = response.ok || response.status === 200 || response.status === 302;
    }
    
    if (!success) {
      let errorMessage = `–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ ${file.name}: ${response.status}`;
      try {
        const errorText = await response.text();
        console.error(`‚ùå –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –¥–ª—è ${file.name}:`, errorText);
        errorMessage += ` - ${errorText}`;
      } catch (readError) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏');
      }
      throw new Error(errorMessage);
    }
    
    console.log(`‚úÖ –§–∞–π–ª ${file.name} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ`);
    
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏ –¥–ª—è –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç–∏
    if (i < formData.files.length - 1) {
      console.log(`‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 3 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ñ–∞–π–ª–∞...`);
      await new Promise(resolve => setTimeout(resolve, 3000));
    }
  }
  
  console.log('üéâ –í—Å–µ —Ñ–∞–π–ª—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –º–∞–ª—ã—Ö —Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ FormSubmit HTML-—Ñ–æ—Ä–º—É
export function sendSmallFiles(formData: AppFormData, cityInfo: string): void {
  console.log('üíå –ù–µ–±–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ FormSubmit HTML-—Ñ–æ—Ä–º—É');
  console.log(`üìä –û—Ç–ø—Ä–∞–≤–ª—è–µ–º ${formData.files.length} —Ñ–∞–π–ª(–æ–≤):`, formData.files.map(f => `${f.name} (${(f.size/1024/1024).toFixed(2)}–ú–ë)`));
  
  const htmlForm = document.createElement('form');
  htmlForm.method = 'POST';
  htmlForm.action = 'https://formsubmit.co/commerce@rusutil-1.ru';
  htmlForm.enctype = 'multipart/form-data';
  htmlForm.style.display = 'none';
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è
  const fields = [
    { name: 'name', value: formData.name },
    { name: 'email', value: formData.email },
    { name: 'phone', value: formData.phone },
    { name: 'company', value: formData.company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞' },
    { name: 'city', value: cityInfo || '–ù–µ —É–∫–∞–∑–∞–Ω' },
    { name: 'plan', value: formData.selectedPlan || '–ù–µ –≤—ã–±—Ä–∞–Ω' },
    { name: 'message', value: formData.comment || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤' },
    { name: '_subject', value: '–ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ IT –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è —Å —Å–∞–π—Ç–∞ utilizon.pro' },
    { name: '_captcha', value: 'false' },
    { name: '_template', value: 'table' },
    { name: '_next', value: 'https://utilizon.pro/success' },
    { name: '_error', value: 'https://utilizon.pro/error' }
  ];
  
  fields.forEach(field => {
    const input = document.createElement('input');
    input.type = 'hidden';
    input.name = field.name;
    input.value = field.value;
    htmlForm.appendChild(input);
  });
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ (FormSubmit –ª—É—á—à–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏)
  formData.files.forEach((file, index) => {
    const fileInput = document.createElement('input');
    fileInput.type = 'file';
    fileInput.name = `attachment${index === 0 ? '' : index + 1}`; // attachment, attachment2, attachment3, etc.
    fileInput.style.display = 'none';
    
    // –°–æ–∑–¥–∞—ë–º DataTransfer –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞ –æ—Ç–¥–µ–ª—å–Ω–æ
    const dataTransfer = new DataTransfer();
    dataTransfer.items.add(file);
    fileInput.files = dataTransfer.files;
    
    htmlForm.appendChild(fileInput);
    
    console.log(`üìé –î–æ–±–∞–≤–ª–µ–Ω —Ñ–∞–π–ª ${index + 1}/${formData.files.length}: ${file.name} –∫–∞–∫ –ø–æ–ª–µ "${fileInput.name}"`);
  });
  
  document.body.appendChild(htmlForm);
  
  // –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
  console.log('üèÅ –§–æ—Ä–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ:');
  console.log(`   ‚Ä¢ –¢–µ–∫—Å—Ç–æ–≤—ã—Ö –ø–æ–ª–µ–π: ${fields.length}`);
  console.log(`   ‚Ä¢ –§–∞–π–ª–æ–≤—ã—Ö –ø–æ–ª–µ–π: ${formData.files.length}`);
  console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º HTML-—Ñ–æ—Ä–º—É...');
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É
  htmlForm.submit();
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ File.io
export async function sendLargeFiles(formData: AppFormData, cityInfo: string, totalSize: number): Promise<void> {
  console.log('üìÅ –ë–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã - –∏—Å–ø–æ–ª—å–∑—É–µ–º file.io –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏');
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã –Ω–∞ file.io (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤)
  const fileLinks = [];
  
  for (let i = 0; i < formData.files.length; i++) {
    const file = formData.files[i];
    console.log(`üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª ${i + 1}/${formData.files.length}: ${file.name} (${(file.size / 1024 / 1024).toFixed(2)} –ú–ë)`);
    
    const fileFormData = new FormData();
    fileFormData.append('file', file);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–π–º-–∞—É—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
    const controller = new AbortController();
    const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Ñ–∞–π–ª–æ–≤
    
    let uploadResponse;
    try {
      uploadResponse = await fetch('https://file.io', {
        method: 'POST',
        body: fileFormData,
        signal: controller.signal
      });
      clearTimeout(timeoutId);
    } catch (uploadError) {
      clearTimeout(timeoutId);
      if (uploadError.name === 'AbortError') {
        throw new Error(`–¢–∞–π–º-–∞—É—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ ${file.name} (30 —Å–µ–∫—É–Ω–¥)`);
      }
      throw uploadError;
    }
    
    if (!uploadResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ ${file.name}: ${uploadResponse.status}`);
    }
    
    const uploadResult = await uploadResponse.json();
    
    if (uploadResult.success && uploadResult.link) {
      fileLinks.push({
        name: file.name,
        size: (file.size / 1024 / 1024).toFixed(2) + ' –ú–ë',
        link: uploadResult.link,
        key: uploadResult.key
      });
      console.log(`‚úÖ –§–∞–π–ª ${file.name} –∑–∞–≥—Ä—É–∂–µ–Ω: ${uploadResult.link}`);
    } else {
      throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª ${file.name}: ${uploadResult.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    }
  }
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ —Ñ–∞–π–ª—ã —á–µ—Ä–µ–∑ FormSubmit Ajax
  const emailFormData = new FormData();
  emailFormData.append('name', formData.name);
  emailFormData.append('email', formData.email);
  emailFormData.append('phone', formData.phone);
  emailFormData.append('company', formData.company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞');
  emailFormData.append('city', cityInfo || '–ù–µ —É–∫–∞–∑–∞–Ω');
  emailFormData.append('plan', formData.selectedPlan || '–ù–µ –≤—ã–±—Ä–∞–Ω');
  emailFormData.append('message', formData.comment || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤');
  emailFormData.append('subject', '–ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ IT –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è —Å —Å–∞–π—Ç–∞ utilizon.pro');
  emailFormData.append('_captcha', 'false');
  emailFormData.append('_template', 'table');
  emailFormData.append('_next', 'https://utilizon.pro/success');
  emailFormData.append('_error', 'https://utilizon.pro/error');
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–∞—Ö
  const filesInfo = fileLinks.map((file, index) => 
    `${index + 1}. ${file.name} (${file.size}) - ${file.link}`
  ).join('\\n');
  
  emailFormData.append('files_info', `–ó–∞–≥—Ä—É–∂–µ–Ω—ã —Ñ–∞–π–ª—ã (${fileLinks.length} —à—Ç., –æ–±—â–∏–π —Ä–∞–∑–º–µ—Ä: ${(totalSize / 1024 / 1024).toFixed(2)} –ú–ë):\\n${filesInfo}`);
  emailFormData.append('files_count', fileLinks.length.toString());
  
  const emailResponse = await fetch('https://formsubmit.co/ajax/commerce@rusutil-1.ru', {
    method: 'POST',
    body: emailFormData,
    headers: {
      'Accept': 'application/json'
    }
  });
  
  if (!emailResponse.ok) {
    throw new Error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞: ${emailResponse.status}`);
  }
  
  console.log('‚úÖ –ó–∞—è–≤–∫–∞ —Å —Ñ–∞–π–ª–∞–º–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
}