import { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import Icon from "@/components/ui/icon";
import { 
  createFormSubmitActivation, 
  checkActivationStatus, 
  sendViaNetlifyForms,
  sendViaGetform,
  getActivationInstructions 
} from "@/lib/email-activation";

export default function EmailActivationPanel() {
  const [activationStatus, setActivationStatus] = useState<string>('unknown');
  const [isChecking, setIsChecking] = useState(false);
  const [isSendingActivation, setIsSendingActivation] = useState(false);
  
  const instructions = getActivationInstructions();

  const handleSendActivation = async () => {
    setIsSendingActivation(true);
    try {
      const result = await createFormSubmitActivation();
      if (result.success) {
        alert(`‚úÖ ${result.message}\n\n–¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É commerce@rusutil-1.ru –∏ –Ω–∞–∂–º–∏—Ç–µ —Å—Å—ã–ª–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è!`);
      } else {
        alert(`‚ùå ${result.message}\n–û—à–∏–±–∫–∞: ${result.error}`);
      }
    } finally {
      setIsSendingActivation(false);
    }
  };

  const handleCheckStatus = async () => {
    setIsChecking(true);
    try {
      const result = await checkActivationStatus();
      setActivationStatus(result.activated ? 'activated' : 'not_activated');
      alert(`${result.activated ? '‚úÖ' : '‚ùå'} ${result.message}`);
    } finally {
      setIsChecking(false);
    }
  };

  const handleTestNetlify = async () => {
    const testData = {
      name: '–¢–µ—Å—Ç Netlify Forms',
      phone: '+7 (999) 123-45-67',
      email: 'test@example.com',
      company: '–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è'
    };
    
    const result = await sendViaNetlifyForms(testData, []);
    alert(result.success ? 
      '‚úÖ Netlify Forms —Ä–∞–±–æ—Ç–∞–µ—Ç!' : 
      `‚ùå Netlify Forms –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: ${result.error}`
    );
  };

  const handleTestGetform = async () => {
    const testData = {
      name: '–¢–µ—Å—Ç Getform.io',
      phone: '+7 (999) 123-45-67',
      email: 'test@example.com',
      company: '–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è'
    };
    
    const result = await sendViaGetform(testData, []);
    alert(result.success ? 
      '‚úÖ Getform.io —Ä–∞–±–æ—Ç–∞–µ—Ç!' : 
      `‚ùå Getform.io –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: ${result.error}`
    );
  };

  return (
    <div className="fixed bottom-4 right-4 z-50">
      <Card className="w-96 bg-gray-900 border-gray-700 text-white">
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Icon name="Settings" size={20} />
            –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å–µ–º
          </CardTitle>
          <CardDescription className="text-gray-300">
            –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Å–ø–æ—Å–æ–±–æ–≤ –æ—Ç–ø—Ä–∞–≤–∫–∏
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          
          {/* –ò–ù–°–¢–†–£–ö–¶–ò–ò */}
          <div className="p-3 bg-blue-900 rounded border border-blue-700">
            <h4 className="font-semibold text-blue-200 mb-2">üìã {instructions.title}</h4>
            <div className="text-xs text-blue-300 space-y-1">
              {instructions.steps.map((step, index) => (
                <div key={index}>{step}</div>
              ))}
            </div>
            <div className="mt-2 p-2 bg-yellow-900 rounded text-yellow-300 text-xs">
              ‚ö†Ô∏è {instructions.note}
            </div>
          </div>

          {/* –ö–ù–û–ü–ö–ò –î–ï–ô–°–¢–í–ò–ô */}
          <div className="space-y-2">
            <Button 
              onClick={handleSendActivation}
              disabled={isSendingActivation}
              className="w-full bg-green-600 hover:bg-green-700"
            >
              {isSendingActivation ? '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º...' : 'üìß –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏'}
            </Button>
            
            <Button 
              onClick={handleCheckStatus}
              disabled={isChecking}
              className="w-full bg-blue-600 hover:bg-blue-700"
            >
              {isChecking ? '–ü—Ä–æ–≤–µ—Ä—è–µ–º...' : 'üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–∞—Ü–∏–∏'}
            </Button>
          </div>

          {/* –°–¢–ê–¢–£–° */}
          {activationStatus !== 'unknown' && (
            <div className={`p-2 rounded text-center ${
              activationStatus === 'activated' 
                ? 'bg-green-900 text-green-300' 
                : 'bg-red-900 text-red-300'
            }`}>
              {activationStatus === 'activated' ? '‚úÖ FormSubmit –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω' : '‚ùå FormSubmit –ù–ï –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω'}
            </div>
          )}

          {/* –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–´ */}
          <div className="border-t border-gray-700 pt-3">
            <h4 className="font-semibold text-gray-300 mb-2">üîÑ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã:</h4>
            <div className="space-y-1">
              <Button 
                onClick={handleTestNetlify}
                variant="outline"
                size="sm"
                className="w-full text-xs"
              >
                –¢–µ—Å—Ç Netlify Forms
              </Button>
              <Button 
                onClick={handleTestGetform}
                variant="outline"
                size="sm"
                className="w-full text-xs"
              >
                –¢–µ—Å—Ç Getform.io
              </Button>
            </div>
          </div>

          {/* –†–ï–®–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú */}
          <div className="text-xs text-gray-400 space-y-1">
            <div><strong>CORS –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞:</strong> –û–ø—É–±–ª–∏–∫—É–π—Ç–µ —Å–∞–π—Ç</div>
            <div><strong>–ê–∫—Ç–∏–≤–∞—Ü–∏—è:</strong> –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É</div>
            <div><strong>–î–æ–º–µ–Ω:</strong> –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π URL</div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}