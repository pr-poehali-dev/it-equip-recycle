import React, { useState } from 'react';
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import Icon from "@/components/ui/icon";
import SuccessModal from "@/components/ui/success-modal";
import { sendFormData } from "@/lib/mail-sender";

interface CalculatorSectionProps {
  formData: any;
  setFormData: (data: any) => void;
  agreed: boolean;
  setAgreed: (agreed: boolean) => void;
  handleSubmit: (e?: React.MouseEvent) => void;
  handleFileChange: (e: React.ChangeEvent<HTMLInputElement>) => void;
  removeFile: (index: number) => void;
  isSubmitting: boolean;
  showSuccessModal: boolean;
  setShowSuccessModal: (show: boolean) => void;
}

const CITIES = [
  '–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥',
  '–ú–æ—Å–∫–≤–∞',
  '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', 
  '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫',
  '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥',
  '–ö–∞–∑–∞–Ω—å',
  '–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥',
  '–ß–µ–ª—è–±–∏–Ω—Å–∫',
  '–°–∞–º–∞—Ä–∞',
  '–û–º—Å–∫',
  '–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É',
  '–£—Ñ–∞',
  '–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫',
  '–í–æ—Ä–æ–Ω–µ–∂',
  '–ü–µ—Ä–º—å',
  '–í–æ–ª–≥–æ–≥—Ä–∞–¥',
  '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä',
  '–°–∞—Ä–∞—Ç–æ–≤',
  '–¢—é–º–µ–Ω—å',
  '–¢–æ–ª—å—è—Ç—Ç–∏',
  '–ò–∂–µ–≤—Å–∫',
  '–ë–∞—Ä–Ω–∞—É–ª',
  '–£–ª—å—è–Ω–æ–≤—Å–∫',
  '–ò—Ä–∫—É—Ç—Å–∫',
  '–•–∞–±–∞—Ä–æ–≤—Å–∫',
  '–Ø—Ä–æ—Å–ª–∞–≤–ª—å',
  '–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫',
  '–ú–∞—Ö–∞—á–∫–∞–ª–∞',
  '–¢–æ–º—Å–∫',
  '–û—Ä–µ–Ω–±—É—Ä–≥',
  '–ö–µ–º–µ—Ä–æ–≤–æ',
  '–ù–æ–≤–æ–∫—É–∑–Ω–µ—Ü–∫',
  '–†—è–∑–∞–Ω—å',
  '–ù–∞–±–µ—Ä–µ–∂–Ω—ã–µ –ß–µ–ª–Ω—ã',
  '–ê—Å—Ç—Ä–∞—Ö–∞–Ω—å',
  '–ü–µ–Ω–∑–∞',
  '–õ–∏–ø–µ—Ü–∫',
  '–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥',
  '–¢—É–ª–∞',
  '–ö–∏—Ä–æ–≤',
  '–ß–µ–±–æ–∫—Å–∞—Ä—ã',
  '–ö—É—Ä—Å–∫',
  '–ë—Ä—è–Ω—Å–∫',
  '–ú–∞–≥–Ω–∏—Ç–æ–≥–æ—Ä—Å–∫',
  '–ò–≤–∞–Ω–æ–≤–æ',
  '–¢–≤–µ—Ä—å',
  '–°—Ç–∞–≤—Ä–æ–ø–æ–ª—å',
  '–ë–µ–ª–≥–æ—Ä–æ–¥',
  '–°–æ—á–∏'
];

export default function CalculatorSection({
  formData,
  setFormData,
  agreed,
  setAgreed,
  handleSubmit,
  handleFileChange,
  removeFile,
  isSubmitting,
  showSuccessModal,
  setShowSuccessModal
}: CalculatorSectionProps) {
  const [localSubmitting, setLocalSubmitting] = useState(false);

  const handleLocalSubmit = async () => {
    if (!formData.name.trim()) {
      alert('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ');
      return;
    }
    
    if (!formData.phone.trim()) {
      alert('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω');
      return;
    }
    
    if (!formData.email.trim()) {
      alert('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ email');
      return;
    }
    
    if (!formData.city || formData.city === '–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥') {
      alert('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥');
      return;
    }
    
    if (!agreed) {
      alert('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏');
      return;
    }

    setLocalSubmitting(true);

    try {
      const result = await sendFormData({
        name: formData.name,
        email: formData.email,
        phone: formData.phone,
        company: formData.company || '',
        city: formData.city,
        plan: '–ë—ã—Å—Ç—Ä–∞—è –æ—Ü–µ–Ω–∫–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏',
        comment: formData.comment || ''
      }, formData.files || []);
      
      if (result) {
        setShowSuccessModal(true);
        // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
        setFormData({
          name: '',
          email: '',
          phone: '',
          company: '',
          city: '–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥',
          customCity: '',
          selectedPlan: '',
          comment: '',
          files: []
        });
        setAgreed(false);
      } else {
        alert('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
      }
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
    } finally {
      setLocalSubmitting(false);
    }
  };

  return (
    <section id="calculator" className="py-20 bg-gray-50">
      <div className="container mx-auto px-4">
        <div className="text-center mb-12">
          <h2 className="text-4xl font-bold text-gray-800 mb-4">–ë—ã—Å—Ç—Ä–∞—è –æ—Ü–µ–Ω–∫–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏</h2>
          <p className="text-gray-600">
            –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—é –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏ –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å<br />
            —É—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç
          </p>
        </div>

        <div className="max-w-2xl mx-auto">
          <Card className="bg-white border border-gray-200 shadow-lg">
            <div className="bg-emerald-800 p-6 text-white">
              <div className="flex items-center justify-center mb-4">
                <Icon name="Calculator" size={32} className="text-professional-rolexGold mr-3" />
                <h3 className="text-xl font-bold">–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É—Ç–∏–ª–∏–∑–∞—Ü–∏–∏</h3>
              </div>
              <p className="text-emerald-100 text-center">
                –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—é –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞
              </p>
            </div>
            
            <CardContent className="p-8">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ */}
                <div>
                  <label className="block text-gray-700 text-sm font-medium mb-2">
                    –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ *
                  </label>
                  <input
                    type="text"
                    required
                    value={formData.name}
                    onChange={(e) => setFormData({...formData, name: e.target.value})}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500"
                    placeholder="–í–∞—à–µ –∏–º—è"
                  />
                </div>

                {/* –ö–æ–º–ø–∞–Ω–∏—è */}
                <div>
                  <label className="block text-gray-700 text-sm font-medium mb-2">
                    –ö–æ–º–ø–∞–Ω–∏—è
                  </label>
                  <input
                    type="text"
                    value={formData.company}
                    onChange={(e) => setFormData({...formData, company: e.target.value})}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500"
                    placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏"
                  />
                </div>

                {/* –¢–µ–ª–µ—Ñ–æ–Ω */}
                <div>
                  <label className="block text-gray-700 text-sm font-medium mb-2">
                    –¢–µ–ª–µ—Ñ–æ–Ω *
                  </label>
                  <input
                    type="tel"
                    required
                    value={formData.phone}
                    onChange={(e) => setFormData({...formData, phone: e.target.value})}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500"
                    placeholder="+7 (___) ___-__-__"
                  />
                </div>

                {/* Email */}
                <div>
                  <label className="block text-gray-700 text-sm font-medium mb-2">
                    Email *
                  </label>
                  <input
                    type="email"
                    required
                    value={formData.email}
                    onChange={(e) => setFormData({...formData, email: e.target.value})}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500"
                    placeholder="your@email.com"
                  />
                </div>

                {/* –ì–æ—Ä–æ–¥ */}
                <div className="md:col-span-2">
                  <label className="block text-gray-700 text-sm font-medium mb-2">
                    –ì–æ—Ä–æ–¥
                  </label>
                  <select
                    value={formData.city || '–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥'}
                    onChange={(e) => setFormData({...formData, city: e.target.value})}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500"
                  >
                    {CITIES.map((city) => (
                      <option key={city} value={city}>
                        {city}
                      </option>
                    ))}
                  </select>
                </div>
              </div>

              {/* –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ */}
              <div className="mt-6">
                <label className="block text-gray-700 text-sm font-medium mb-2">
                  üìé –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è *
                </label>
                <p className="text-xs text-gray-500 mb-3">
                  –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª—ã —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è (–¥–æ 5 —Ñ–∞–π–ª–æ–≤, –º–∞–∫—Å–∏–º—É–º 20–ú–ë –∫–∞–∂–¥—ã–π)
                </p>
                
                <div className="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center bg-gray-50 hover:bg-gray-100 transition-colors">
                  <Icon name="Upload" size={32} className="text-professional-rolexGold mx-auto mb-3" />
                  <input
                    type="file"
                    id="calculator-files"
                    multiple
                    accept=".pdf,.doc,.docx,.xls,.xlsx,.jpg,.jpeg,.png,.txt"
                    onChange={handleFileChange}
                    className="hidden"
                  />
                  <label
                    htmlFor="calculator-files"
                    className="cursor-pointer"
                  >
                    <span className="text-emerald-600 font-medium hover:text-emerald-700">
                      –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã
                    </span>
                    <span className="text-gray-600"> –∏–ª–∏ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Å—é–¥–∞</span>
                  </label>
                  <p className="text-xs text-gray-500 mt-2">
                    Excel (.xls, .xlsx), Word (.docx), PDF (.pdf) –¥–æ 20 –ú–ë –∫–∞–∂–¥—ã–π
                  </p>
                </div>

                {formData.files && formData.files.length > 0 && (
                  <div className="mt-4 space-y-2">
                    <p className="text-gray-700 text-sm font-medium">
                      –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã ({formData.files.length}/5):
                    </p>
                    {formData.files.map((file: File, index: number) => (
                      <div key={index} className="flex items-center justify-between bg-gray-100 p-3 rounded border">
                        <div className="flex items-center">
                          <Icon name="FileText" size={16} className="text-gray-500 mr-2" />
                          <span className="text-gray-700 text-sm">{file.name}</span>
                        </div>
                        <div className="flex items-center">
                          <span className="text-gray-500 text-xs mr-3">
                            {(file.size / 1024 / 1024).toFixed(2)} –ú–ë
                          </span>
                          <Button
                            size="sm"
                            variant="outline"
                            onClick={() => removeFile(index)}
                            className="border-red-300 text-red-500 hover:bg-red-50"
                          >
                            <Icon name="X" size={14} />
                          </Button>
                        </div>
                      </div>
                    ))}
                  </div>
                )}
              </div>

              {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
              <div className="mt-6">
                <label className="block text-gray-700 text-sm font-medium mb-2">
                  –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                </label>
                <textarea
                  value={formData.comment}
                  onChange={(e) => setFormData({...formData, comment: e.target.value})}
                  rows={4}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 resize-none"
                  placeholder="–£–∫–∞–∂–∏—Ç–µ —Å—Ä–æ—á–Ω–æ—Å—Ç—å, –æ—Å–æ–±—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è, –≤–æ–ø—Ä–æ—Å—ã –ø–æ —É—Ç–∏–ª–∏–∑–∞—Ü–∏–∏..."
                />
              </div>

              {/* –°–æ–≥–ª–∞—Å–∏–µ */}
              <div className="mt-6">
                <div className="flex items-start space-x-3">
                  <input
                    type="checkbox"
                    id="calculator-agreement"
                    checked={agreed}
                    onChange={(e) => setAgreed(e.target.checked)}
                    className="w-4 h-4 mt-1 text-emerald-600 border-gray-300 rounded focus:ring-emerald-500"
                  />
                  <label htmlFor="calculator-agreement" className="text-sm text-gray-600">
                    –°–æ–≥–ª–∞—Å–µ–Ω —Å{' '}
                    <a href="/privacy" className="text-professional-rolexGreen hover:underline">
                      –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                    </a>
                    ,{' '}
                    <a href="/terms" className="text-professional-rolexGreen hover:underline">
                      —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                    </a>{' '}
                    –∏ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
                    –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é, —á—Ç–æ —É–∫–∞–∑–∞–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–∞.
                  </label>
                </div>
              </div>

              {/* –ö–Ω–æ–ø–∫–∏ */}
              <div className="mt-8 space-y-4">
                <Button
                  onClick={handleLocalSubmit}
                  disabled={!formData.name || !formData.phone || !formData.email || !formData.city || formData.city === '–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥' || !agreed || localSubmitting}
                  className="w-full bg-professional-rolexGreen text-white font-semibold py-3 px-6 text-lg"
                >
                  <Icon name="Calculator" size={20} className="mr-2 text-professional-rolexGold" />
                  {localSubmitting ? '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º...' : '–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏'}
                </Button>

                <Button
                  variant="outline"
                  className="w-full border-professional-rolexGreen text-professional-rolexGreen hover:bg-emerald-50 font-medium py-3 px-6 bg-white"
                  onClick={() => {
                    const phone = '+7 (495) 123-45-67';
                    window.open(`tel:${phone}`);
                  }}
                >
                  <Icon name="Phone" size={20} className="mr-2 text-professional-rolexGold" />
                  –û–±—Å—É–¥–∏—Ç—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É
                </Button>

                <div className="bg-emerald-50 border border-emerald-200 rounded-lg p-4 text-center">
                  <div className="flex items-center justify-center text-professional-rolexGreen">
                    <Icon name="Clock" size={20} className="mr-2 text-professional-rolexGreen" />
                    <span className="font-medium">–û—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è</span>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>

      <SuccessModal 
        isOpen={showSuccessModal} 
        onClose={() => setShowSuccessModal(false)} 
      />
    </section>
  );
}