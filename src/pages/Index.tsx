import { useState } from 'react';
import Header from '@/components/sections/Header';
import HeroSection from '@/components/sections/HeroSection';
import ServicesSection from '@/components/sections/ServicesSection';
import PricesSection from '@/components/sections/PricesSection';
import AboutSection from '@/components/sections/AboutSection';
import ClientsSection from '@/components/sections/ClientsSection';
import LicensesSection from '@/components/sections/LicensesSection';
import FAQSection from '@/components/sections/FAQSection';
import ContactsSection from '@/components/sections/ContactsSection';
import CalculatorSection from '@/components/sections/CalculatorSection';
import Footer from '@/components/sections/Footer';
import { sendEmailWithFiles } from '@/lib/email-services';

export default function Index() {
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
  const [formData, setFormData] = useState({
    name: '',
    company: '',
    phone: '',
    email: '',
    city: '',
    customCity: '',
    comment: '',
    files: [] as File[],
    selectedPlan: ''
  });
  const [agreed, setAgreed] = useState(false);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [showSuccessModal, setShowSuccessModal] = useState(false);

  const scrollToCalculator = () => {
    const calculatorSection = document.getElementById('calculator');
    calculatorSection?.scrollIntoView({ behavior: 'smooth' });
  };

  const handlePlanSelect = (plan: string) => {
    setFormData(prev => ({ ...prev, selectedPlan: plan }));
    scrollToCalculator();
  };

  const handleSubmit = async (e?: React.MouseEvent) => {
    e?.preventDefault();
    
    if (!formData.name.trim() || !formData.phone.trim() || !formData.email.trim()) {
      alert('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: –ò–º—è, –¢–µ–ª–µ—Ñ–æ–Ω, Email');
      return;
    }
    
    if (formData.city === '–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥' && !formData.customCity.trim()) {
      alert('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞');
      return;
    }
    
    if (!agreed) {
      alert('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏');
      return;
    }

    setIsSubmitting(true);

    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞—è–≤–∫–∏ —Å —Ñ–∞–π–ª–∞–º–∏...');
    console.log('üìé –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤:', formData.files?.length || 0);

    try {
      // –°–ü–û–°–û–ë 1: EmailJS (–†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø - –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–∞–π–ª—ã)
      console.log('üìß –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —á–µ—Ä–µ–∑ EmailJS...');
      const emailJSResult = await sendEmailWithFiles(formData, formData.files || []);
      
      if (emailJSResult.success) {
        console.log('‚úÖ EmailJS: –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
        setShowSuccessModal(true);
        resetForm();
        return;
      }
      
      console.log('‚ö†Ô∏è EmailJS –Ω–µ —É–¥–∞–ª—Å—è, –ø—Ä–æ–±—É–µ–º FormSpree...');
      
      // –°–ü–û–°–û–ë 2: FormSpree (—Ä–µ–∑–µ—Ä–≤)
      const formSpreeResult = await sendViaFormSpree(formData, formData.files || []);
      
      if (formSpreeResult.success) {
        console.log('‚úÖ FormSpree: –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
        setShowSuccessModal(true);
        resetForm();
        return;
      }
      
      console.log('‚ö†Ô∏è FormSpree –Ω–µ —É–¥–∞–ª—Å—è, –ø—Ä–æ–±—É–µ–º Netlify Forms...');
      
      // –°–ü–û–°–û–ë 3: Netlify Forms (–µ—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç –Ω–∞ Netlify)
      const netlifyResult = await sendViaNetlifyForms(formData, formData.files || []);
      
      if (netlifyResult.success) {
        console.log('‚úÖ Netlify Forms: –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
        setShowSuccessModal(true);
        resetForm();
        return;
      }
      
      // –°–ü–û–°–û–ë 4: Fallback - FormSubmit –±–µ–∑ —Ñ–∞–π–ª–æ–≤
      console.log('‚ö†Ô∏è –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –Ω–µ —É–¥–∞–ª–∏—Å—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º FormSubmit –±–µ–∑ —Ñ–∞–π–ª–æ–≤...');
      await sendViaFormSubmit();
      
    } catch (error) {
      console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:', error);
      
      // –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      alert('–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
      setShowSuccessModal(true);
      resetForm();
    } finally {
      setIsSubmitting(false);
    }
  };

  const resetForm = () => {
    setFormData({
      name: '',
      email: '',
      phone: '',
      company: '',
      city: '',
      customCity: '',
      selectedPlan: '',
      comment: '',
      files: []
    });
    setAgreed(false);
  };

  const sendViaFormSubmit = async () => {
    const cityInfo = formData.city === '–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥' 
      ? formData.customCity || '–ù–µ —É–∫–∞–∑–∞–Ω' 
      : formData.city || '–ù–µ —É–∫–∞–∑–∞–Ω';
    
    const formDataToSend = new FormData();
    formDataToSend.append('name', formData.name);
    formDataToSend.append('email', formData.email);
    formDataToSend.append('phone', formData.phone);
    formDataToSend.append('company', formData.company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞');
    formDataToSend.append('city', cityInfo);
    formDataToSend.append('plan', formData.selectedPlan || '–ù–µ –≤—ã–±—Ä–∞–Ω');
    formDataToSend.append('message', formData.comment || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤');
    formDataToSend.append('_subject', '–ó–∞—è–≤–∫–∞ –Ω–∞ —É—Ç–∏–ª–∏–∑–∞—Ü–∏—é IT –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è —Å —Å–∞–π—Ç–∞ utilizon.pro');
    formDataToSend.append('_captcha', 'false');
    formDataToSend.append('_template', 'table');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–∞—Ö –≤ —Ç–µ–∫—Å—Ç
    if (formData.files && formData.files.length > 0) {
      const filesList = formData.files.map(f => `- ${f.name} (${(f.size/1024/1024).toFixed(2)}–ú–ë)`).join('\n');
      formDataToSend.append('files_info', `–ö–ª–∏–µ–Ω—Ç –ø—ã—Ç–∞–ª—Å—è –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å ${formData.files.length} —Ñ–∞–π–ª(–æ–≤):\n${filesList}\n\n–°–≤—è–∂–∏—Ç–µ—Å—å —Å –∫–ª–∏–µ–Ω—Ç–æ–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤.`);
    }

    await fetch('https://formsubmit.co/commerce@rusutil-1.ru', {
      method: 'POST',
      body: formDataToSend
    });
    
    console.log('üì§ FormSubmit: –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã (–±–µ–∑ —Ñ–∞–π–ª–æ–≤)');
    setShowSuccessModal(true);
    resetForm();
  };



  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const selectedFiles = Array.from(e.target.files || []);
    
    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 5 —Ñ–∞–π–ª–æ–≤ (–ª–∏–º–∏—Ç FormSubmit)
    const filesToAdd = selectedFiles.slice(0, 5);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞ (–¥–æ 20 –ú–ë)
    const validFiles = filesToAdd.filter(file => {
      const maxSize = 20 * 1024 * 1024; // 20 –ú–ë
      if (file.size > maxSize) {
        alert(`–§–∞–π–ª "${file.name}" —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 20 –ú–ë`);
        return false;
      }
      return true;
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–∏–π —Ä–∞–∑–º–µ—Ä –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ (–¥–æ 100 –ú–ë –æ–±—â–∏–π –ª–∏–º–∏—Ç)
    const currentFiles = formData.files || [];
    const allFiles = [...currentFiles, ...validFiles];
    const totalSize = allFiles.reduce((sum, file) => sum + file.size, 0);
    const maxTotalSize = 100 * 1024 * 1024; // 100 –ú–ë –æ–±—â–∏–π –ª–∏–º–∏—Ç
    
    if (totalSize > maxTotalSize) {
      alert(`–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–æ–≤ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 100 –ú–ë. –¢–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä: ${(totalSize / 1024 / 1024).toFixed(2)} –ú–ë`);
      return;
    }
    
    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 5 —Ñ–∞–π–ª–æ–≤ –≤—Å–µ–≥–æ
    const totalFiles = allFiles.slice(0, 5);
    
    if (totalFiles.length > currentFiles.length) {
      setFormData(prev => ({ ...prev, files: totalFiles }));
    }
    
    if (selectedFiles.length > 5) {
      alert('–ú–∞–∫—Å–∏–º—É–º 5 —Ñ–∞–π–ª–æ–≤ –∑–∞ –æ–¥–Ω—É –æ—Ç–ø—Ä–∞–≤–∫—É. –ü–µ—Ä–≤—ã–µ 5 —Ñ–∞–π–ª–æ–≤ –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã.');
    }
  };

  const removeFile = (indexToRemove: number) => {
    setFormData(prev => ({
      ...prev,
      files: prev.files.filter((_, index) => index !== indexToRemove)
    }));
  };



  return (
    <div className="min-h-screen bg-gray-50">
      <Header mobileMenuOpen={mobileMenuOpen} setMobileMenuOpen={setMobileMenuOpen} />
      <main>
        <HeroSection />
        <ServicesSection />
        <PricesSection onPlanSelect={handlePlanSelect} selectedPlan={formData.selectedPlan} />
        <CalculatorSection 
          formData={formData}
          setFormData={setFormData}
          agreed={agreed}
          setAgreed={setAgreed}
          handleSubmit={handleSubmit}
          handleFileChange={handleFileChange}
          removeFile={removeFile}
          isSubmitting={isSubmitting}
          showSuccessModal={showSuccessModal}
          setShowSuccessModal={setShowSuccessModal}
        />
        <AboutSection />
        <ClientsSection />
        <LicensesSection />
        <FAQSection />
        <ContactsSection />
      </main>
      <Footer />
    </div>
  );
}